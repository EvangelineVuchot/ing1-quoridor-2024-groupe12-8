main :

DÉBUT
    DÉCLARER plateau comme tableau de taille SIZE x SIZE x 4
    ENTIER x1 ← 1, y1 ← 9
    ENTIER x2 ← SIZE - 2, y2 ← 9
    ENTIER tour ← 1

    SI le système est Windows ALORS
        Configurer l'affichage pour les caractères spéciaux et les couleurs
    FIN SI

    APPELER initialiserPlateau(plateau)
    PLACER le pion du joueur 1 à (x1, y1) dans le plateau
    PLACER le pion du joueur 2 à (x2, y2) dans le plateau

    TANT QUE la partie n'est pas terminée FAIRE
        EFFACER l'écran
        APPELER afficherPlateau(plateau, barrierX, barrierY, modePlacement1, modePlacement2, orientation)
        ÉCRIRE "C'est au joueur", tour, "de jouer."

        SI tour = 1 ALORS
            SI modePlacement1 est désactivé ALORS
                ÉCRIRE "Appuyez sur 'a' pour placer une barrière ou utilisez z/q/s/d pour déplacer le pion."
            SINON
                ÉCRIRE "Utilisez z/q/s/d pour déplacer la barrière, o pour changer l'orientation, et Entrée pour confirmer."
            FIN SI
        SINON
            SI modePlacement2 est désactivé ALORS
                ÉCRIRE "Appuyez sur 'p' pour placer une barrière ou utilisez les flèches pour déplacer le pion."
            SINON
                ÉCRIRE "Utilisez les flèches pour déplacer la barrière, O pour changer l'orientation, et Entrée pour confirmer."
            FIN SI
        FIN SI

        LIRE l'entrée utilisateur dans `input`

        SI tour = 1 ALORS
            SI input = 'a' ET modePlacement1 est désactivé ALORS
                ACTIVER modePlacement1
                barrierX ← x1
                barrierY ← y1
                orientation ← 'V'
            SINON SI modePlacement1 est activé ALORS
                SI input = Entrée ALORS
                    APPELER placerBarriere(plateau, barrierX, barrierY, orientation)
                    modePlacement1 ← 0
                    tour ← 2
                SINON SI input = 'o' ALORS
                    CHANGER orientation entre 'V' et 'H'
                SINON
                    APPELER deplacerBarriere(barrierX, barrierY, input, PLAYER1)
                FIN SI
            SINON
                APPELER deplacerPion(plateau, x1, y1, input, PLAYER1)
                SI x1 = SIZE - 2 ALORS
                    EFFACER l'écran
                    APPELER afficherPlateau(plateau, barrierX, barrierY, modePlacement1, modePlacement2, orientation)
                    ÉCRIRE "Le joueur 1 a gagné !"
                    SORTIR de la boucle
                FIN SI
                tour ← 2
            FIN SI
        SINON
            SI input = 'p' ET modePlacement2 est désactivé ALORS
                ACTIVER modePlacement2
                barrierX ← x2
                barrierY ← y2
                orientation ← 'V'
            SINON SI modePlacement2 est activé ALORS
                SI input = Entrée ALORS
                    APPELER placerBarriere(plateau, barrierX, barrierY, orientation)
                    modePlacement2 ← 0
                    tour ← 1
                SINON SI input = 'O' ALORS
                    CHANGER orientation entre 'V' et 'H'
                SINON
                    APPELER deplacerBarriere(barrierX, barrierY, input, PLAYER2)
                FIN SI
            SINON
                APPELER deplacerPion(plateau, x2, y2, input, PLAYER2)
                SI x2 = 1 ALORS
                    EFFACER l'écran
                    APPELER afficherPlateau(plateau, barrierX, barrierY, modePlacement1, modePlacement2, orientation)
                    ÉCRIRE "Le joueur 2 a gagné !"
                    SORTIR de la boucle
                FIN SI
                tour ← 1
            FIN SI
        FIN SI
    FIN TANT QUE

    RETOURNER 0
FIN


sous-programme :

Fonction initialiserPlateau :

DÉBUT
    POUR i allant de 0 à SIZE - 1 FAIRE
        POUR j allant de 0 à SIZE - 1 FAIRE
            plateau[i][j] ← caractère approprié selon la position (i, j)
        FIN POUR
    FIN POUR
FIN

Fonction afficherPlateau :

DÉBUT
    POUR i allant de 0 à SIZE - 1 FAIRE
        POUR j allant de 0 à SIZE - 1 FAIRE
            SI une barrière temporaire est à afficher ALORS :
                Afficher la barrière temporaire avec couleur
            SINON
                Afficher le caractère de la case
            FIN SI
        FIN POUR
        Afficher une nouvelle ligne
    FIN POUR
FIN

Fonction lireTouche :

DÉBUT
    SI le système est Windows ALORS
        LIRE la touche avec getch()
    SINON
        LIRE la touche avec séquence d'échappement pour les flèches
    FIN SI
    RETOURNER la touche lue
FIN

Fonction barriereEntre :

DÉBUT
    CALCULER la position intermédiaire entre (x1, y1) et (x2, y2)
    SI une barrière est présente à cette position ALORS
        RETOURNER 1
    SINON
        RETOURNER 0
    FIN SI
FIN

Fonction deplacerPion :

DÉBUT
    CALCULER newX et newY selon la direction
    SI une barrière est entre (x, y) et (newX, newY) ALORS
        RETOURNER
    FIN SI
    SI la case (newX, newY) est libre ALORS
        DÉPLACER le pion vers (newX, newY)
    FIN SI
FIN

Fonction deplacerBarriere :

DÉBUT
    AJUSTER barrierX et barrierY selon la direction
    S'ASSURER que les coordonnées restent dans les limites du plateau
FIN

Fonction placerBarriere :

DÉBUT
    SI l'orientation est 'V' ALORS
        SI x est dans les limites du plateau ALORS
            PLACER la barrière verticale
        FIN SI
    SINON SI l'orientation est 'H' ALORS
        SI y est dans les limites du plateau ALORS
            PLACER la barrière horizontale
        FIN SI
    FIN SI
FIN

Header :

DÉBUT HEADER

    CONSTANTE ENTIÈRE SIZE ← 19
    CONSTANTE CARACTÈRE PLAYER1 ← '1'
    CONSTANTE CARACTÈRE PLAYER2 ← '2'

    CONSTANTE CHAÎNE VERTICAL_LINE ← "║"
    CONSTANTE CHAÎNE HORIZONTAL_LINE ← "═"
    CONSTANTE CHAÎNE TOP_LEFT_CORNER ← "╔"
    CONSTANTE CHAÎNE TOP_RIGHT_CORNER ← "╗"
    CONSTANTE CHAÎNE BOTTOM_LEFT_CORNER ← "╚"
    CONSTANTE CHAÎNE BOTTOM_RIGHT_CORNER ← "╝"
    CONSTANTE CHAÎNE INTERSECTION ← "╬"

    // Déclaration des variables globales pour la gestion des barrières
    ENTIER modePlacement1 ← 0
    ENTIER modePlacement2 ← 0
    ENTIER barrierX
    ENTIER barrierY
    CARACTÈRE orientation ← 'V'  // Orientation initiale de la barrière

    // Déclarations des fonctions

    FONCTION initialiserPlateau(plateau : tableau[SIZE][SIZE][4])
    // Initialise le plateau de jeu avec les bordures, intersections et cases vides.

    FONCTION afficherPlateau(plateau : tableau[SIZE][SIZE][4], barrierX : entier, barrierY : entier, 
                             modePlacement1 : entier, modePlacement2 : entier, orientation : caractère)
    // Affiche l’état actuel du plateau de jeu, y compris les pions et barrières.

    FONCTION lireTouche() : entier
    // Lit et retourne la touche pressée par l’utilisateur.

    FONCTION barriereEntre(x1 : entier, y1 : entier, x2 : entier, y2 : entier, plateau : tableau[SIZE][SIZE][4]) : entier
    // Vérifie s’il y a une barrière entre deux positions sur le plateau.

    FONCTION deplacerPion(plateau : tableau[SIZE][SIZE][4], x : entier, y : entier, direction : entier, joueur : caractère)
    // Déplace le pion d’un joueur dans la direction spécifiée, si aucun obstacle n’est présent.

    FONCTION deplacerBarriere(x : entier, y : entier, direction : entier, joueur : caractère)
    // Déplace la position temporaire d’une barrière pendant le placement.

    FONCTION placerBarriere(plateau : tableau[SIZE][SIZE][4], x : entier, y : entier, orientation : caractère)
    // Place une barrière définitive sur le plateau, selon l’orientation et la position choisies.

FIN HEADER
