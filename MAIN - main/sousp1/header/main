// main.c
#include "header.h"

int main() {
    char plateau[SIZE][SIZE][4];
    int x1 = 1, y1 = 9; // Position de départ du joueur 1 (colonne centrale)
    int x2 = SIZE - 2, y2 = 9; // Position de départ du joueur 2 (colonne centrale)
    int tour = 1;
    GameState state = {0, 0, 0, 0, 'V'};

#ifdef _WIN32
    HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);
    DWORD dwMode = 0;
    GetConsoleMode(hOut, &dwMode);
    dwMode |= ENABLE_VIRTUAL_TERMINAL_PROCESSING;
    SetConsoleMode(hOut, dwMode);

    SetConsoleOutputCP(CP_UTF8);
#endif

    initialiserPlateau(plateau);
    strcpy(plateau[x1][y1], "1");
    strcpy(plateau[x2][y2], "2");

    while (1) {
        system("cls"); // Pour Windows
        // system("clear"); // Pour Unix/Linux

        afficherPlateau(plateau, &state);

        int input;
        printf("C'est au joueur %d de jouer.\n", tour);
        if (tour == 1) {
            if (state.modePlacement1 == 0) {
                printf("Appuyez sur 'a' pour placer une barrière ou déplacez votre pion avec z/q/s/d.\n");
            } else {
                printf("Déplacez la barrière avec z/q/s/d, changez l'orientation avec 'o' et appuyez sur Entrée pour la placer.\n");
            }
        } else {
            if (state.modePlacement2 == 0) {
                printf("Appuyez sur 'p' pour placer une barrière ou déplacez votre pion avec les flèches.\n");
            } else {
                printf("Déplacez la barrière avec les flèches, changez l'orientation avec 'O' et appuyez sur Entrée pour la placer.\n");
            }
        }

        input = lireTouche();

        if (tour == 1) {
            if (input == 'a' && state.modePlacement1 == 0) {
                state.modePlacement1 = 1;
                state.barrierX = x1;
                state.barrierY = y1;
                state.orientation = 'V';
            } else if (state.modePlacement1 == 1) {
                if (input == 13 || input == '\n') { // Touche Entrée
                    placerBarriere(plateau, state.barrierX, state.barrierY, state.orientation);
                    state.modePlacement1 = 0;
                    tour = 2;
                } else if (input == 'o') {
                    state.orientation = (state.orientation == 'V') ? 'H' : 'V';
                } else {
                    deplacerBarriere(&state.barrierX, &state.barrierY, input, PLAYER1, &state);
                }
            } else {
                deplacerPion(plateau, &x1, &y1, input, PLAYER1);

                if (x1 == SIZE - 2) {
                    system("cls"); // Pour Windows
                    afficherPlateau(plateau, &state);
                    printf("Le joueur 1 a gagné !\n");
                    break;
                }

                tour = 2;
            }
        } else {
            if (input == 'p' && state.modePlacement2 == 0) {
                state.modePlacement2 = 1;
                state.barrierX = x2;
                state.barrierY = y2;
                state.orientation = 'V';
            } else if (state.modePlacement2 == 1) {
                if (input == 13 || input == '\n') { // Touche Entrée
                    placerBarriere(plateau, state.barrierX, state.barrierY, state.orientation);
                    state.modePlacement2 = 0;
                    tour = 1;
                } else if (input == 'O') {
                    state.orientation = (state.orientation == 'V') ? 'H' : 'V';
                } else {
                    deplacerBarriere(&state.barrierX, &state.barrierY, input, PLAYER2, &state);
                }
            } else {
                deplacerPion(plateau, &x2, &y2, input, PLAYER2);

                if (x2 == 1) {
                    system("cls"); // Pour Windows
                    afficherPlateau(plateau, &state);
                    printf("Le joueur 2 a gagné !\n");
                    break;
                }

                tour = 1;
            }
        }
    }

    return 0;
}
